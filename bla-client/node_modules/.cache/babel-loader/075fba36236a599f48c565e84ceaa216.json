{"ast":null,"code":"import { createStore, action, thunk, computed } from \"easy-peasy\";\nimport api from './api/axios';\nexport default createStore({\n  stories: [],\n  setStories: action((state, payload) => {\n    state.stories = payload;\n  }),\n  storyTitle: '',\n  setstoryTitle: action((state, payload) => {\n    state.storyTitle = payload;\n  }),\n  storyBody: '',\n  setstoryBody: action((state, payload) => {\n    state.storyBody = payload;\n  }),\n  editTitle: '',\n  setEditTitle: action((state, payload) => {\n    state.editTitle = payload;\n  }),\n  editBody: '',\n  setEditBody: action((state, payload) => {\n    state.editBody = payload;\n  }),\n  search: '',\n  setSearch: action((state, payload) => {\n    state.search = payload;\n  }),\n  searchResults: [],\n  setSearchResults: action((state, payload) => {\n    state.searchResults = payload;\n  }),\n  storyCount: computed(state => state.stories.length),\n  getStoryById: computed(state => {\n    return id => state.stories.find(story => story.id.toString() === id);\n  }),\n  saveStory: thunk(async (actions, newStory, helpers) => {\n    const {\n      stories\n    } = helpers.getState();\n\n    try {\n      const response = await api.story('/stories', newStory);\n      actions.setStories([...stories, response.data]);\n      actions.setStoryTitle('');\n      actions.setStoryBody('');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  }),\n  deleteStory: thunk(async (actions, id, helpers) => {\n    const {\n      stories\n    } = helpers.getState();\n\n    try {\n      await api.delete(`/stories/${id}`);\n      actions.setStories(stories.filter(story => story.id !== id));\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  }),\n  editStory: thunk(async (actions, updatedStory, helpers) => {\n    const {\n      stories\n    } = helpers.getState();\n    const {\n      id\n    } = updatedStory;\n\n    try {\n      const response = await api.put(`/stories/${id}`, updatedStory);\n      actions.setStories(stories.map(story => story.id === id ? { ...response.data\n      } : story));\n      actions.setEditTitle('');\n      actions.setEditBody('');\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  })\n});","map":{"version":3,"sources":["/Users/mikedagawd/services/bla-client/src/store.js"],"names":["createStore","action","thunk","computed","api","stories","setStories","state","payload","storyTitle","setstoryTitle","storyBody","setstoryBody","editTitle","setEditTitle","editBody","setEditBody","search","setSearch","searchResults","setSearchResults","storyCount","length","getStoryById","id","find","story","toString","saveStory","actions","newStory","helpers","getState","response","data","setStoryTitle","setStoryBody","err","console","log","message","deleteStory","delete","filter","editStory","updatedStory","put","map"],"mappings":"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","sourcesContent":["import { createStore, action, thunk, computed } from \"easy-peasy\";\nimport api from './api/axios';\n\nexport default createStore({\n    stories: [],\n    setStories: action((state, payload) => {\n        state.stories = payload;\n    }),\n    storyTitle: '',\n    setstoryTitle: action((state, payload) => {\n        state.storyTitle = payload;\n    }),\n    storyBody: '',\n    setstoryBody: action((state, payload) => {\n        state.storyBody = payload;\n    }),\n    editTitle: '',\n    setEditTitle: action((state, payload) => {\n        state.editTitle = payload;\n    }),\n    editBody: '',\n    setEditBody: action((state, payload) => {\n        state.editBody = payload;\n    }),\n    search: '',\n    setSearch: action((state, payload) => {\n        state.search = payload;\n    }),\n    searchResults: [],\n    setSearchResults: action((state, payload) => {\n        state.searchResults = payload;\n    }),\n    storyCount: computed((state) => state.stories.length),\n    getStoryById: computed((state) => {\n        return (id) => state.stories.find(story => (story.id).toString() === id);\n    }),\n    saveStory: thunk(async (actions, newStory, helpers) => {\n        const { stories } = helpers.getState();\n        try {\n            const response = await api.story('/stories', newStory);\n            actions.setStories([...stories, response.data]);\n            actions.setStoryTitle('');\n            actions.setStoryBody('');\n        } catch (err) {\n            console.log(`Error: ${err.message}`);\n        }\n    }),\n    deleteStory: thunk(async (actions, id, helpers) => {\n        const { stories } = helpers.getState();\n        try {\n            await api.delete(`/stories/${id}`);\n            actions.setStories(stories.filter(story => story.id !== id));\n        } catch (err) {\n            console.log(`Error: ${err.message}`);\n        }\n    }),\n    editStory: thunk(async (actions, updatedStory, helpers) => {\n        const { stories } = helpers.getState();\n        const { id } = updatedStory;\n        try {\n            const response = await api.put(`/stories/${id}`, updatedStory);\n            actions.setStories(stories.map(story => story.id === id ? { ...response.data } : story));\n            actions.setEditTitle('');\n            actions.setEditBody('');\n        } catch (err) {\n            console.log(`Error: ${err.message}`);\n        }\n    })\n});"]},"metadata":{},"sourceType":"module"}