{"ast":null,"code":"var _jsxFileName = \"/Users/mikedagawd/services/bla-client/src/context/PersistLogin.js\",\n    _s = $RefreshSig$();\n\nimport { Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useRefreshToken from '../hooks/useRefreshToken';\nimport useAuth from \"../hooks/useAuth\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PersistLogin = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const refresh = useRefreshToken();\n  const {\n    auth\n  } = useAuth();\n  const [persist] = useLocalStorage('persist', false);\n  useEffect(() => {\n    let isMounted = true;\n\n    const verifyRefreshToken = async () => {\n      try {\n        await refresh();\n      } catch (err) {\n        console.log(err);\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    };\n\n    !(auth !== null && auth !== void 0 && auth.accessToken) ? verifyRefreshToken() : setIsLoading(false);\n    return () => isMounted = false;\n  }, []);\n  useEffect(() => {\n    console.log(`isLoading: ${isLoading}`);\n    console.log(`accessToken: ${JSON.stringify(auth === null || auth === void 0 ? void 0 : auth.accessToken)}`);\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !persist ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n};\n\n_s(PersistLogin, \"FWKDM+p309RCPzzFOFVXgtJeWK8=\", false, function () {\n  return [useRefreshToken, useAuth, useLocalStorage];\n});\n\n_c = PersistLogin;\nexport default PersistLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersistLogin\");","map":{"version":3,"sources":["/Users/mikedagawd/services/bla-client/src/context/PersistLogin.js"],"names":["Outlet","useState","useEffect","useRefreshToken","useAuth","useLocalStorage","PersistLogin","isLoading","setIsLoading","refresh","auth","persist","isMounted","verifyRefreshToken","err","console","log","accessToken","JSON","stringify"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMQ,OAAO,GAAGN,eAAe,EAA/B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWN,OAAO,EAAxB;AACA,QAAM,CAACO,OAAD,IAAYN,eAAe,CAAC,SAAD,EAAY,KAAZ,CAAjC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,SAAS,GAAG,IAAhB;;AAEA,UAAMC,kBAAkB,GAAG,YAAY;AACnC,UAAI;AACA,cAAMJ,OAAO,EAAb;AACH,OAFD,CAEE,OAAOK,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAJD,SAIU;AACNF,QAAAA,SAAS,IAAIJ,YAAY,CAAC,KAAD,CAAzB;AACH;AACJ,KARD;;AASA,MAACE,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEO,WAAP,IAAqBJ,kBAAkB,EAAvC,GAA4CL,YAAY,CAAC,KAAD,CAAxD;AAEA,WAAO,MAAMI,SAAS,GAAG,KAAzB;AACH,GAfQ,EAeN,EAfM,CAAT;AAiBAV,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAa,cAAaT,SAAU,EAApC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeE,IAAI,CAACC,SAAL,CAAeT,IAAf,aAAeA,IAAf,uBAAeA,IAAI,CAAEO,WAArB,CAAkC,EAA9D;AACH,GAHQ,EAGN,CAACV,SAAD,CAHM,CAAT;AAKA,sBACI;AAAA,cACC,CAACI,OAAD,gBACK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADL,GAEKJ,SAAS,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAEL,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AALV,mBADJ;AAUH,CAtCD;;GAAMD,Y;UAEcH,e,EACCC,O,EACCC,e;;;KAJhBC,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import { Outlet } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport useRefreshToken from '../hooks/useRefreshToken';\nimport useAuth from \"../hooks/useAuth\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst PersistLogin = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const refresh = useRefreshToken();\n    const { auth } = useAuth();\n    const [persist] = useLocalStorage('persist', false)\n\n    useEffect(() => {\n        let isMounted = true;\n\n        const verifyRefreshToken = async () => {\n            try {\n                await refresh();\n            } catch (err) {\n                console.log(err);\n            } finally {\n                isMounted && setIsLoading(false);\n            }\n        }\n        !auth?.accessToken ? verifyRefreshToken() : setIsLoading(false);\n\n        return () => isMounted = false;\n    }, [])\n\n    useEffect(() => {\n        console.log(`isLoading: ${isLoading}`)\n        console.log(`accessToken: ${JSON.stringify(auth?.accessToken)}`)\n    }, [isLoading])\n\n    return (\n        <>\n        {!persist\n            ? <Outlet />\n            : isLoading\n                ? <p>Loading...</p>\n                : <Outlet />\n        }\n        </>\n    )\n}\n\nexport default PersistLogin;"]},"metadata":{},"sourceType":"module"}