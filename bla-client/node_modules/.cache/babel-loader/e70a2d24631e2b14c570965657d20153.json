{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst getLocalValue = (key, initValue) => {\n  if (typeof window === 'undefined') return initValue;\n  const localValue = JSON.parse(localStorage.getItem(key));\n  if (localValue) return localValue;\n  if (initValue instanceof Function) return initValue();\n  return initValue;\n};\n\nconst useLocalStorage = (key, initValue) => {\n  _s();\n\n  const [value, setValue] = useState(() => {\n    return getLocalValue(key, initValue);\n  });\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n};\n\n_s(useLocalStorage, \"ollt+NhKBlRWQRMLEWOS8ZANCJM=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["/Users/mikedagawd/services/bla-client/src/hooks/useLocalStorage.js"],"names":["useState","useEffect","getLocalValue","key","initValue","window","localValue","JSON","parse","localStorage","getItem","Function","useLocalStorage","value","setValue","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,SAAN,KAAoB;AACtC,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC,OAAOD,SAAP;AAEnC,QAAME,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBP,GAArB,CAAX,CAAnB;AACA,MAAIG,UAAJ,EAAgB,OAAOA,UAAP;AAEhB,MAAIF,SAAS,YAAYO,QAAzB,EAAmC,OAAOP,SAAS,EAAhB;AAEnC,SAAOA,SAAP;AACH,CATD;;AAWA,MAAMQ,eAAe,GAAG,CAACT,GAAD,EAAMC,SAAN,KAAoB;AAAA;;AACxC,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,MAAM;AACrC,WAAOE,aAAa,CAACC,GAAD,EAAMC,SAAN,CAApB;AACH,GAFiC,CAAlC;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY,CAACM,OAAb,CAAqBZ,GAArB,EAA0BI,IAAI,CAACS,SAAL,CAAeH,KAAf,CAA1B;AACH,GAFQ,EAEN,CAACV,GAAD,EAAMU,KAAN,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH,CAVD;;GAAMF,e;;AAYN,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst getLocalValue = (key, initValue) => {\n    if (typeof window === 'undefined') return initValue;\n\n    const localValue = JSON.parse(localStorage.getItem(key));\n    if (localValue) return localValue;\n\n    if (initValue instanceof Function) return initValue();\n\n    return initValue;\n}\n\nconst useLocalStorage = (key, initValue) => {\n    const [value, setValue] = useState(() => {\n        return getLocalValue(key, initValue);\n    });\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(value));\n    }, [key, value])\n\n    return [value, setValue];\n}\n\nexport default useLocalStorage"]},"metadata":{},"sourceType":"module"}