{"ast":null,"code":"var _jsxFileName = \"/Users/mikedagawd/services/bla-client/src/components/pages/auth/SignUp.js\",\n    _s = $RefreshSig$();\n\nrequire('dotenv');\n\nimport \"../../../styles/signUp.css\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from '../../../api/axios';\nimport { Link } from 'react-router-dom';\nimport Join from '../../../images/Join Button.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [firstName, setFirstName] = useState('');\n  const [validFirstName, setValidFirstName] = useState(false);\n  const [firstNameFocus, setFirstNameFocus] = useState(false);\n  const [lastName, setLastName] = useState('');\n  const [validLastName, setValidLastName] = useState(false);\n  const [lastNameFocus, setLastNameFocus] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [validUserName, setValidUserName] = useState(false);\n  const [userNameFocus, setUsertNameFocus] = useState(false);\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [passwordFocus, setPasswordFocus] = useState(false);\n  const [passwordMatch, setPasswordMatch] = useState('');\n  const [validPasswordMatch, setValidPasswordMatch] = useState(false);\n  const [passwordMatchFocus, setPasswordMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setValidFirstName(process.env.FN_REGEX.test(firstName));\n  }, [firstName]);\n  useEffect(() => {\n    setValidLastName(process.env.LN_REGEX.test(lastName));\n  }, [lastName]);\n  useEffect(() => {\n    setValidUserName(process.env.USER_REGEX.test(userName));\n  }, [userName]);\n  useEffect(() => {\n    setValidEmail(process.env.EM_REGEX.test(email));\n  }, [email]);\n  useEffect(() => {\n    setValidPassword(process.env.PWD_REGEX.test(password));\n    setValidPasswordMatch(password === passwordMatch);\n  }, [password, passwordMatch]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [firstName, lastName, email, userName, password, passwordMatch]);\n\n  const handleSubmit = async e => {\n    e.PreventDefault();\n    const v1 = process.env.USER_REGEX.test(userName);\n    const v2 = process.env.PWD_REGEX.test(password);\n\n    if (!v1 || !v2) {\n      setErrMsg(\"Invalid Credentials.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(process.env.REGISTER_URL, JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        userName,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      setSuccess(true);\n      setFirstName('');\n      setLastName('');\n      setEmail('');\n      setUserName('');\n      setPassword('');\n      setPasswordMatch('');\n    } catch (err) {\n      var _err$response;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"showcase\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-signup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                className: \"details\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"field\",\n                id: \"firstName\",\n                type: \"text\",\n                onChange: e => setFirstName(e.target.value),\n                value: firstName,\n                required: true,\n                \"aria-invalid\": validFirstName ? \"false\" : \"true\",\n                \"aria-describedby\": \"uidnote\",\n                onFocus: () => setFirstNameFocus(true),\n                onBlur: () => setFirstNameFocus(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                className: \"details\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"field\",\n                id: \"lastName\",\n                type: \"text\",\n                onChange: e => setLastName(e.target.value),\n                value: lastName,\n                required: true,\n                \"aria-invalid\": validLastName ? \"false\" : \"true\",\n                \"aria-describedby\": \"uidnote\",\n                onFocus: () => setLastNameFocus(true),\n                onBlur: () => setLastNameFocus(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"userName\",\n                className: \"details\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"field\",\n                id: \"userName\",\n                type: \"text\",\n                ref: userRef,\n                autoComplete: \"off\",\n                onChange: e => setUserName(e.target.value),\n                value: userName,\n                required: true,\n                \"aria-invalid\": validUserName ? \"false\" : \"true\",\n                \"aria-describedby\": \"uidnote\",\n                onFocus: () => setUserNameFocus(true),\n                onBlur: () => setUserNameFocus(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"uidnote\",\n                className: userNameFocus && userName && !validUserName ? \"instructions\" : \"offscreen\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faInfoCircle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 29\n                }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 48\n                }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 54\n                }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"details\",\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"field\",\n                id: \"email\",\n                type: \"text\",\n                onChange: e => setEmail(e.target.value),\n                value: email,\n                required: true,\n                \"aria-invalid\": validEmail ? \"false\" : \"true\",\n                \"aria-describedby\": \"uidnote\",\n                onFocus: () => setEmailFocus(true),\n                onBlur: () => setEmailFocus(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"uidnote\",\n                className: emailFocus && email && !validEmail ? \"instructions\" : \"offscreen\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faInfoCircle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 29\n                }, this), \"Must be an address which is not currently stord in the database.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 93\n                }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 54\n                }, this), \"Letters, numbers, and special characters allowed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 78\n                }, this), \"Must be a valid email address.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"details\",\n                children: [\"Password\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheck,\n                  className: validPassword ? \"valid\" : \"hide\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimes,\n                  className: validPassword || !password ? \"hide\" : \"invalid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"field\",\n                id: \"password\",\n                type: \"password\",\n                onChange: e => setPassword(e.target.value),\n                value: password,\n                required: true,\n                \"aria-invalid\": validPassword ? \"false\" : \"true\",\n                \"aria-describedby\": \"pwdnote\",\n                onFocus: () => setPasswordFocus(true),\n                onBlur: () => setPasswordFocus(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"pwdnote\",\n                className: passwordFocus && !validPassword ? \"instructions\" : \"offscreen\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faInfoCircle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 29\n                }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 48\n                }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 108\n                }, this), \"Allowed special characters: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-label\": \"exclamation mark\",\n                  children: \"!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 57\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-label\": \"at symbol\",\n                  children: \"@\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 102\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-label\": \"hashtag\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 140\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-label\": \"dollar sign\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 176\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-label\": \"percent\",\n                  children: \"%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 216\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirm_password\",\n                className: \"details\",\n                children: \"Confirm Pasword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"field\",\n                id: \"confirm_password\",\n                type: \"password\",\n                onChange: e => setPasswordMatch(e.target.value),\n                value: passwordMatch,\n                required: true,\n                \"aria-invalid\": validPasswordMatch ? \"false\" : \"true\",\n                \"aria-describedby\": \"confirm_note\",\n                onFocus: () => setPasswordMatchFocus(true),\n                onBlur: () => setPasswordMatchFocus(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                id: \"confirmnote\",\n                className: passwordMatchFocus && !validPasswordMatch ? \"instructions\" : \"offscreen\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faInfoCircle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 29\n                }, this), \"Must match the first password input field.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !validFirstName || !validLastName || !validEmail || !validUserName || !validPassword || !validPasswordMatch ? true : false,\n            children: \"Join Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/home\",\n              children: \"Take Me Home!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"jIaLUBmBro0dE2SCPBSB2gk/qEg=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/mikedagawd/services/bla-client/src/components/pages/auth/SignUp.js"],"names":["require","React","useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","axios","Link","Join","SignUp","userRef","errRef","firstName","setFirstName","validFirstName","setValidFirstName","firstNameFocus","setFirstNameFocus","lastName","setLastName","validLastName","setValidLastName","lastNameFocus","setLastNameFocus","userName","setUserName","validUserName","setValidUserName","userNameFocus","setUsertNameFocus","email","setEmail","validEmail","setValidEmail","emailFocus","setEmailFocus","password","setPassword","validPassword","setValidPassword","passwordFocus","setPasswordFocus","passwordMatch","setPasswordMatch","validPasswordMatch","setValidPasswordMatch","passwordMatchFocus","setPasswordMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","process","env","FN_REGEX","test","LN_REGEX","USER_REGEX","EM_REGEX","PWD_REGEX","handleSubmit","e","PreventDefault","v1","v2","response","post","REGISTER_URL","JSON","stringify","headers","withCredentials","err","status","target","value","setUserNameFocus"],"mappings":"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","sourcesContent":["require('dotenv');\nimport \"../../../styles/signUp.css\";\nimport React, { useRef, useState, useEffect } from 'react'\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from '../../../api/axios';\nimport { Link } from 'react-router-dom';\nimport Join from '../../../images/Join Button.png';\n\nconst SignUp = () => {\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [firstName, setFirstName] = useState('');\n    const [validFirstName, setValidFirstName] = useState(false);\n    const [firstNameFocus, setFirstNameFocus] = useState(false);\n\n    const [lastName, setLastName] = useState('');\n    const [validLastName, setValidLastName] = useState(false);\n    const [lastNameFocus, setLastNameFocus] = useState(false);\n\n    const [userName, setUserName] = useState('');\n    const [validUserName, setValidUserName] = useState(false);\n    const [userNameFocus, setUsertNameFocus] = useState(false);\n\n    const [email, setEmail] = useState('');\n    const [validEmail, setValidEmail] = useState(false);\n    const [emailFocus, setEmailFocus] = useState(false);\n\n    const [password, setPassword] = useState('');\n    const [validPassword, setValidPassword] = useState(false);\n    const [passwordFocus, setPasswordFocus] = useState(false);\n\n    const [passwordMatch, setPasswordMatch] = useState('');\n    const [validPasswordMatch, setValidPasswordMatch] = useState(false);\n    const [passwordMatchFocus, setPasswordMatchFocus] = useState(false);\n\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setValidFirstName(process.env.FN_REGEX.test(firstName));\n    }, [firstName])\n\n    useEffect(() => {\n        setValidLastName(process.env.LN_REGEX.test(lastName));\n    }, [lastName])\n\n    useEffect(() => {\n        setValidUserName(process.env.USER_REGEX.test(userName));\n    }, [userName])\n\n    useEffect(() => {\n        setValidEmail(process.env.EM_REGEX.test(email));\n    }, [email])\n\n    useEffect(() => {\n        setValidPassword(process.env.PWD_REGEX.test(password))\n        setValidPasswordMatch(password === passwordMatch)\n    }, [password, passwordMatch])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [firstName, lastName, email, userName, password, passwordMatch])\n\n    const handleSubmit = async (e) => {\n        e.PreventDefault();\n\n        const v1 = process.env.USER_REGEX.test(userName);\n        const v2 = process.env.PWD_REGEX.test(password);\n        if (!v1 || !v2) {\n            setErrMsg(\"Invalid Credentials.\");\n            return\n        }\n        try {\n            const response = await axios.post(process.env.REGISTER_URL,\n                JSON.stringify({ firstName, lastName, email, userName, password }),\n                {\n                    headers: { 'Content-Type': 'application/json'},\n                    withCredentials: true\n                }\n            );\n            setSuccess(true);\n            setFirstName('');\n            setLastName('');\n            setEmail('');\n            setUserName('');\n            setPassword('');\n            setPasswordMatch('');\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 409) {\n                setErrMsg('Username Taken');\n            } else {\n                setErrMsg('Registration Failed')\n            }\n            errRef.current.focus();\n        }\n    }\n\n    return (\n        <>\n        { success ? (\n            <section>\n            <h1>Success!</h1>\n            <p>\n            <a href=\"#\">Sign In</a>\n            </p>\n            </section>\n        ) : (\n        <section className=\"showcase\">\n            <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n            <div className=\"container-signup\">\n                <div className=\"header\">SIGN UP</div>\n                <form>\n                    <div className=\"user-details\">\n                        <div className=\"user-input\">\n                            <label htmlFor=\"firstName\" className=\"details\">\n                                First Name\n                            </label>\n                            <input className=\"field\"\n                                   id=\"firstName\" \n                                   type=\"text\"\n                                   onChange={(e) => setFirstName(e.target.value)}\n                                   value={firstName}\n                                   required\n                                   aria-invalid={validFirstName ? \"false\" : \"true\"}\n                                   aria-describedby=\"uidnote\"\n                                   onFocus={() => setFirstNameFocus(true)}\n                                   onBlur={() => setFirstNameFocus(false)}\n                            />\n                        </div>\n                        <div className=\"user-input\">\n                            <label htmlFor=\"lastName\" className=\"details\">\n                                Last Name\n                            </label>\n                            <input className=\"field\"\n                                   id=\"lastName\" \n                                   type=\"text\"\n                                   onChange={(e) => setLastName(e.target.value)}\n                                   value={lastName}\n                                   required\n                                   aria-invalid={validLastName ? \"false\" : \"true\"}\n                                   aria-describedby=\"uidnote\"\n                                   onFocus={() => setLastNameFocus(true)}\n                                   onBlur={() => setLastNameFocus(false)}\n                            />\n                        </div>\n                        <div className=\"user-input\">\n                            <label htmlFor=\"userName\" className=\"details\">\n                                Username\n                            </label>\n                            <input className=\"field\"\n                                   id=\"userName\" \n                                   type=\"text\"\n                                   ref={userRef}\n                                   autoComplete=\"off\"\n                                   onChange={(e) => setUserName(e.target.value)}\n                                   value={userName}\n                                   required\n                                   aria-invalid={validUserName ? \"false\" : \"true\"}\n                                   aria-describedby=\"uidnote\"\n                                   onFocus={() => setUserNameFocus(true)}\n                                   onBlur={() => setUserNameFocus(false)}\n                            />\n                            <p id=\"uidnote\" className={userNameFocus && userName && !validUserName ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            4 to 24 characters.<br />\n                            Must begin with a letter.<br />\n                            Letters, numbers, underscores, hyphens allowed.\n                            </p>\n                        </div>\n                        <div className=\"user-input\">\n                            <label htmlFor=\"email\" className=\"details\">\n                                Email Address\n                            </label>\n                            <input className=\"field\"\n                                   id=\"email\" \n                                   type=\"text\"\n                                   onChange={(e) => setEmail(e.target.value)}\n                                   value={email}\n                                   required\n                                   aria-invalid={validEmail ? \"false\" : \"true\"}\n                                   aria-describedby=\"uidnote\"\n                                   onFocus={() => setEmailFocus(true)}\n                                   onBlur={() => setEmailFocus(false)}\n                            />\n                            <p id=\"uidnote\" className={emailFocus && email && !validEmail ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must be an address which is not currently stord in the database.<br />\n                            Must begin with a letter.<br />\n                            Letters, numbers, and special characters allowed.<br />\n                            Must be a valid email address.\n                            </p>\n                        </div>\n                        \n                        <div className=\"user-input\">\n                            <label htmlFor=\"password\"className=\"details\">\n                                Password\n                                <FontAwesomeIcon icon={faCheck} className={validPassword ? \"valid\" : \"hide\"} />\n                                <FontAwesomeIcon icon={faTimes} className={validPassword || !password ? \"hide\" : \"invalid\"} />\n                            </label>\n                            <input className=\"field\"\n                                   id=\"password\" \n                                   type=\"password\"\n                                   onChange={(e) => setPassword(e.target.value)}\n                                   value={password}\n                                   required\n                                   aria-invalid={validPassword ? \"false\" : \"true\"}\n                                   aria-describedby=\"pwdnote\"\n                                   onFocus={() => setPasswordFocus(true)}\n                                   onBlur={() => setPasswordFocus(false)}\n                            />\n                            <p id=\"pwdnote\" className={passwordFocus && !validPassword ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            8 to 24 characters.<br />\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\n                            </p>\n                        </div>\n\n                        <div className=\"user-input\">\n                            <label htmlFor=\"confirm_password\" className=\"details\">\n                                Confirm Pasword\n                            </label>\n                            <input className=\"field\"\n                                   id=\"confirm_password\"\n                                   type=\"password\"\n                                   onChange={(e) => setPasswordMatch(e.target.value)}\n                                   value={passwordMatch}\n                                   required\n                                   aria-invalid={validPasswordMatch ? \"false\" : \"true\"}\n                                   aria-describedby=\"confirm_note\"\n                                   onFocus={() => setPasswordMatchFocus(true)}\n                                   onBlur={() => setPasswordMatchFocus(false)}\n                            />\n                            <p id=\"confirmnote\" className={passwordMatchFocus && !validPasswordMatch ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must match the first password input field.\n                            </p>\n                        </div>\n                    </div>\n                    <button disabled={!validFirstName || !validLastName || !validEmail || !validUserName || !validPassword || !validPasswordMatch ? true : false}>\n                        Join Now\n                    </button>\n                </form>\n                <p>\n                        Already registered?<br />\n                        <span>\n                            <Link to=\"/home\">Take Me Home!</Link>\n                        </span>\n                    </p>\n                </div>    \n        </section>\n        )}\n        </>\n    )\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}