{"ast":null,"code":"import { createStore, action, thunk, computed } from 'easy-peasy';\nimport stories from './api/stories';\nimport users from './api/users';\nexport default createStore({\n  // STORIES' STATES\n  stories: [],\n  setStories: action((state, payload) => {\n    state.stories = payload;\n  }),\n  storyTitle: '',\n  setStoryTile: action((state, payload) => {\n    state.storyTitle = payload;\n  }),\n  storyURL: '',\n  setStoryURL: action((state, payload) => {\n    state.storyURL = payload;\n  }),\n  imageURL: '',\n  setImageURL: action((state, payload) => {\n    state.imageURL = payload;\n  }),\n  author: '',\n  setAuthor: action((state, payload) => {\n    state.author = payload;\n  }),\n  category: '',\n  setCategory: action((state, payload) => {\n    state.category = payload;\n  }),\n  desc: '',\n  setDesc: action((state, payload) => {\n    state.desc = payload;\n  }),\n  genre: '',\n  setGenre: action((state, payload) => {\n    state.genre = payload;\n  }),\n  regId: 0,\n  setRegId: action((state, payload) => {\n    state.regId = payload;\n  }),\n  // USERS' STATES\n  users: [],\n  setUsers: action((state, payload) => {\n    state.users = payload;\n  }),\n  firstName: '',\n  setFirstName: action((state, payload) => {\n    state.firstName = payload;\n  }),\n  lastName: '',\n  setFirstName: action((state, payload) => {\n    state.lastName = payload;\n  }),\n  email: '',\n  setEmail: action((state, payload) => {\n    state.email = payload;\n  }),\n  username: '',\n  setUsername: action((state, payload) => {\n    state.username = payload;\n  })\n});","map":{"version":3,"sources":["/Users/mikedagawd/services/bla-client/src/store.js"],"names":["createStore","action","thunk","computed","stories","users","setStories","state","payload","storyTitle","setStoryTile","storyURL","setStoryURL","imageURL","setImageURL","author","setAuthor","category","setCategory","desc","setDesc","genre","setGenre","regId","setRegId","setUsers","firstName","setFirstName","lastName","email","setEmail","username","setUsername"],"mappings":"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","sourcesContent":["import { createStore, action, thunk, computed } from 'easy-peasy';\nimport stories from './api/stories';\nimport users from './api/users';\n\nexport default createStore({\n\n// STORIES' STATES\n\n    stories: [],\n    setStories: action((state, payload) => {\n        state.stories = payload;\n    }),\n    storyTitle: '',\n    setStoryTile: action((state, payload) => {\n        state.storyTitle = payload;\n    }),\n    storyURL: '',\n    setStoryURL: action((state, payload) => {\n        state.storyURL = payload;\n    }),\n    imageURL: '',\n    setImageURL: action((state, payload) => {\n        state.imageURL = payload;\n    }),\n    author: '',\n    setAuthor: action((state, payload) => {\n        state.author = payload;\n    }),\n    category: '',\n    setCategory: action((state, payload) => {\n        state.category = payload;\n    }),\n    desc: '',\n    setDesc: action((state, payload) => {\n        state.desc = payload;\n    }),\n    genre: '',\n    setGenre: action((state, payload) => {\n        state.genre = payload;\n    }),\n    regId: 0,\n    setRegId: action((state, payload) => {\n        state.regId = payload;\n    }),\n\n// USERS' STATES\n\n    users: [],\n    setUsers: action((state, payload) => {\n        state.users = payload;\n    }),\n    firstName: '',\n    setFirstName: action((state, payload) => {\n        state.firstName = payload;\n    }),\n    lastName: '',\n    setFirstName: action((state, payload) => {\n        state.lastName = payload;\n    }),\n    email: '',\n    setEmail: action((state, payload) => {\n        state.email = payload;\n    }),\n    username: '',\n    setUsername: action((state, payload) => {\n        state.username = payload;\n    })\n});"]},"metadata":{},"sourceType":"module"}