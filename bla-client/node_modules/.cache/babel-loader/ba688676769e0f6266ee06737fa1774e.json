{"ast":null,"code":"var _jsxFileName = \"/Users/mikedagawd/services/bla-client/src/components/pages/auth/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport \"../../../styles/signUp.css\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from '../../../api/axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv');\n\nconst REGISTER_URL = '/api/register';\nconst USER_REGEX = /^[A-Z][A-Z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst FN_REGEX = /^[a-zA-Z]+ [a-zA-Z]+$/;\nconst LN_REGEX = /^[a-zA-Z]+ [a-zA-Z]+$/;\nconst EM_REGEX = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/;\n\nconst SignUp = () => {\n  _s();\n\n  var _location$state, _location$state$from;\n\n  const userRef = useRef();\n  const errRef = useRef();\n  const [firstName, setFirstName] = useState('');\n  const [validFirstName, setValidFirstName] = useState(false);\n  const [firstNameFocus, setFirstNameFocus] = useState(false);\n  const [lastName, setLastName] = useState('');\n  const [validLastName, setValidLastName] = useState(false);\n  const [lastNameFocus, setLastNameFocus] = useState(false);\n  const [username, setUsername] = useState('');\n  const [validUsername, setValidUsername] = useState(false);\n  const [usernameFocus, setUsernameFocus] = useState(false);\n  const [email, setEmail] = useState('');\n  const [validEmail, setValidEmail] = useState(false);\n  const [emailFocus, setEmailFocus] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [passwordFocus, setPasswordFocus] = useState(false);\n  const [passwordMatch, setPasswordMatch] = useState('');\n  const [validPasswordMatch, setValidPasswordMatch] = useState(false);\n  const [passwordMatchFocus, setPasswordMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setValidFirstName(FN_REGEX.test(firstName));\n  }, [firstName]);\n  useEffect(() => {\n    setValidLastName(LN_REGEX.test(lastName));\n  }, [lastName]);\n  useEffect(() => {\n    setValidUsername(USER_REGEX.test(username));\n  }, [username]);\n  useEffect(() => {\n    setValidEmail(EM_REGEX.test(email));\n  }, [email]);\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n    setValidPasswordMatch(password === passwordMatch);\n  }, [password, passwordMatch]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [firstName, lastName, email, username, password, passwordMatch]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/directory\";\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // const v1 = USER_REGEX.test(username);\n    // const v2 = PWD_REGEX.test(password);\n    // if (!v1 || !v2) {\n    //     setErrMsg(\"Invalid Credentials.\");\n    //     return\n    // }\n\n    console.log(username, firstName, password);\n\n    try {\n      const response = await axios.post(REGISTER_URL, JSON.stringify({\n        firstName,\n        lastName,\n        email,\n        username,\n        password\n      }), {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n      setSuccess(true);\n      console.log('We Live!'); //navigate(from, { replace: true });\n\n      setFirstName('');\n      setLastName('');\n      setEmail('');\n      setUsername('');\n      setPassword('');\n      setPasswordMatch('');\n    } catch (err) {\n      var _err$response;\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg('No Server Response');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 409) {\n        setErrMsg('Username Taken');\n      } else {\n        setErrMsg('Registration Failed');\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          path: \"/directory\",\n          children: \"Directory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"user-details\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          className: \"details\",\n          children: [\"First Name\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validFirstName ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validFirstName || !firstName ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"field\",\n          id: \"firstName\",\n          type: \"text\",\n          onChange: e => setFirstName(e.target.value),\n          value: firstName,\n          required: true,\n          \"aria-invalid\": validFirstName ? \"false\" : \"true\",\n          \"aria-describedby\": \"fnnote\",\n          onFocus: () => setFirstNameFocus(true),\n          onBlur: () => setFirstNameFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"fnnote\",\n          className: firstNameFocus && !validFirstName ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 54\n          }, this), \"Letters and hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          className: \"details\",\n          children: [\"Last Name\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validLastName ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validLastName || !lastName ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"field\",\n          id: \"lastName\",\n          type: \"text\",\n          onChange: e => setLastName(e.target.value),\n          value: lastName,\n          required: true,\n          \"aria-invalid\": validLastName ? \"false\" : \"true\",\n          \"aria-describedby\": \"lnnote\",\n          onFocus: () => setLastNameFocus(true),\n          onBlur: () => setLastNameFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"lnnote\",\n          className: lastNameFocus && !validLastName ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 54\n          }, this), \"Letters and hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          className: \"details\",\n          children: [\"Username\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validUsername ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validUsername || !username ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"field\",\n          id: \"username\",\n          type: \"text\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUsername(e.target.value),\n          value: username,\n          required: true,\n          \"aria-invalid\": validUsername ? \"false\" : \"true\",\n          \"aria-describedby\": \"unote\",\n          onFocus: () => setUsernameFocus(true),\n          onBlur: () => setUsernameFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"unote\",\n          className: usernameFocus && username && !validUsername ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 48\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 54\n          }, this), \"Letters, numbers, underscores, hyphens allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"details\",\n          children: [\"Email Address\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validEmail ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validEmail || !email ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"field\",\n          id: \"email\",\n          type: \"text\",\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          required: true,\n          \"aria-invalid\": validEmail ? \"false\" : \"true\",\n          \"aria-describedby\": \"enote\",\n          onFocus: () => setEmailFocus(true),\n          onBlur: () => setEmailFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"enote\",\n          className: emailFocus && !validEmail ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), \"Must be an address which is not currently stord in the database.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 93\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 54\n          }, this), \"Letters, numbers, and special characters allowed.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 78\n          }, this), \"Must be a valid email address.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"details\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validPassword ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validPassword || !password ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"field\",\n          id: \"password\",\n          type: \"password\",\n          autoComplete: \"off\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          required: true,\n          \"aria-invalid\": validPassword ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPasswordFocus(true),\n          onBlur: () => setPasswordFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: passwordFocus && !validPassword ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 48\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 108\n          }, this), \"Allowed special characters: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 57\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 102\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 140\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 176\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 216\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          className: \"details\",\n          children: [\"Confirm Pasword\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validPasswordMatch && passwordMatch ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validPasswordMatch || !passwordMatch ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"field\",\n          id: \"confirmpassword\",\n          type: \"password\",\n          autoComplete: \"off\",\n          onChange: e => setPasswordMatch(e.target.value),\n          value: passwordMatch,\n          required: true,\n          \"aria-invalid\": validPasswordMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setPasswordMatchFocus(true),\n          onBlur: () => setPasswordMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: passwordMatchFocus && !validPasswordMatch ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), \"Must match the first password input field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Join Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/home\",\n            children: \"Take Me Home!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"YCNYswXoOSFTXoyBEIfnCgbh0PE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/mikedagawd/services/bla-client/src/components/pages/auth/SignUp.js"],"names":["React","useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","useNavigate","useLocation","axios","Link","require","REGISTER_URL","USER_REGEX","PWD_REGEX","FN_REGEX","LN_REGEX","EM_REGEX","SignUp","userRef","errRef","firstName","setFirstName","validFirstName","setValidFirstName","firstNameFocus","setFirstNameFocus","lastName","setLastName","validLastName","setValidLastName","lastNameFocus","setLastNameFocus","username","setUsername","validUsername","setValidUsername","usernameFocus","setUsernameFocus","email","setEmail","validEmail","setValidEmail","emailFocus","setEmailFocus","password","setPassword","validPassword","setValidPassword","passwordFocus","setPasswordFocus","passwordMatch","setPasswordMatch","validPasswordMatch","setValidPasswordMatch","passwordMatchFocus","setPasswordMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","test","navigate","location","from","state","pathname","handleSubmit","e","preventDefault","console","log","response","post","JSON","stringify","headers","withCredentials","data","err","status","target","value"],"mappings":"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","sourcesContent":["import \"../../../styles/signUp.css\";\nimport React, { useRef, useState, useEffect } from 'react'\nimport { faCheck, faTimes, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from '../../../api/axios';\nimport { Link } from 'react-router-dom';\nrequire('dotenv');\n\nconst REGISTER_URL = '/api/register'\nconst USER_REGEX = /^[A-Z][A-Z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\nconst FN_REGEX = /^[a-zA-Z]+ [a-zA-Z]+$/;\nconst LN_REGEX = /^[a-zA-Z]+ [a-zA-Z]+$/;\nconst EM_REGEX = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/;\n\nconst SignUp = () => {\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [firstName, setFirstName] = useState('');\n    const [validFirstName, setValidFirstName] = useState(false);\n    const [firstNameFocus, setFirstNameFocus] = useState(false);\n\n    const [lastName, setLastName] = useState('');\n    const [validLastName, setValidLastName] = useState(false);\n    const [lastNameFocus, setLastNameFocus] = useState(false);\n\n    const [username, setUsername] = useState('');\n    const [validUsername, setValidUsername] = useState(false);\n    const [usernameFocus, setUsernameFocus] = useState(false);\n\n    const [email, setEmail] = useState('');\n    const [validEmail, setValidEmail] = useState(false);\n    const [emailFocus, setEmailFocus] = useState(false);\n\n    const [password, setPassword] = useState('');\n    const [validPassword, setValidPassword] = useState(false);\n    const [passwordFocus, setPasswordFocus] = useState(false);\n\n    const [passwordMatch, setPasswordMatch] = useState('');\n    const [validPasswordMatch, setValidPasswordMatch] = useState(false);\n    const [passwordMatchFocus, setPasswordMatchFocus] = useState(false);\n\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setValidFirstName(FN_REGEX.test(firstName));\n    }, [firstName])\n\n    useEffect(() => {\n        setValidLastName(LN_REGEX.test(lastName));\n    }, [lastName])\n\n    useEffect(() => {\n        setValidUsername(USER_REGEX.test(username));\n    }, [username])\n\n    useEffect(() => {\n        setValidEmail(EM_REGEX.test(email));\n    }, [email])\n\n    useEffect(() => {\n        setValidPassword(PWD_REGEX.test(password))\n        setValidPasswordMatch(password === passwordMatch)\n    }, [password, passwordMatch])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [firstName, lastName, email, username, password, passwordMatch])\n\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from?.pathname || \"/directory\";\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // const v1 = USER_REGEX.test(username);\n        // const v2 = PWD_REGEX.test(password);\n        // if (!v1 || !v2) {\n        //     setErrMsg(\"Invalid Credentials.\");\n        //     return\n        // }\n        console.log(username, firstName, password)\n        try {\n            const response = await axios.post(REGISTER_URL,\n                JSON.stringify({ firstName, lastName, email, username, password }),\n                {\n                    headers: { 'Content-Type': 'application/json'},\n                    withCredentials: true\n                }\n            );\n            console.log(JSON.stringify(response?.data));\n            setSuccess(true);\n            console.log('We Live!')\n            //navigate(from, { replace: true });\n            setFirstName('');\n            setLastName('');\n            setEmail('');\n            setUsername('');\n            setPassword('');\n            setPasswordMatch('');\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 409) {\n                setErrMsg('Username Taken');\n            } else {\n                setErrMsg('Registration Failed')\n            }\n            errRef.current.focus();\n        }\n    }\n\n    return (\n        <>\n        { success ? (\n            <section>\n            <h1>Success!</h1>\n            <p>\n            <Link path=\"/directory\">Directory</Link>\n            </p>\n            </section>\n        ) : (\n        <section>\n            <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n            <div className=\"header\">SIGN UP</div>\n                <form className=\"user-details\" onSubmit={handleSubmit}>\n                        \n                            <label htmlFor=\"firstName\" className=\"details\">\n                                First Name\n                                <FontAwesomeIcon icon={faCheck} className={validFirstName ? \"valid\" : \"hide\"} />\n                                <FontAwesomeIcon icon={faTimes} className={validFirstName || !firstName ? \"hide\" : \"invalid\"} />\n                            </label>\n                            <input className=\"field\"\n                                   id=\"firstName\" \n                                   type=\"text\"\n                                   onChange={(e) => setFirstName(e.target.value)}\n                                   value={firstName}\n                                   required\n                                   aria-invalid={validFirstName ? \"false\" : \"true\"}\n                                   aria-describedby=\"fnnote\"\n                                   onFocus={() => setFirstNameFocus(true)}\n                                   onBlur={() => setFirstNameFocus(false)}\n                            />\n                            <p id=\"fnnote\" className={firstNameFocus && !validFirstName ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must begin with a letter.<br />\n                            Letters and hyphens allowed.\n                            </p>\n                        \n                        \n                            <label htmlFor=\"lastName\" className=\"details\">\n                                Last Name\n                                <FontAwesomeIcon icon={faCheck} className={validLastName ? \"valid\" : \"hide\"} />\n                                <FontAwesomeIcon icon={faTimes} className={validLastName || !lastName ? \"hide\" : \"invalid\"} />\n                            </label>\n                            <input className=\"field\"\n                                   id=\"lastName\" \n                                   type=\"text\"\n                                   onChange={(e) => setLastName(e.target.value)}\n                                   value={lastName}\n                                   required\n                                   aria-invalid={validLastName ? \"false\" : \"true\"}\n                                   aria-describedby=\"lnnote\"\n                                   onFocus={() => setLastNameFocus(true)}\n                                   onBlur={() => setLastNameFocus(false)}\n                            />\n                            <p id=\"lnnote\" className={lastNameFocus && !validLastName ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must begin with a letter.<br />\n                            Letters and hyphens allowed.\n                            </p>\n                        \n                        \n                            <label htmlFor=\"username\" className=\"details\">\n                                Username\n                                <FontAwesomeIcon icon={faCheck} className={validUsername ? \"valid\" : \"hide\"} />\n                                <FontAwesomeIcon icon={faTimes} className={validUsername || !username ? \"hide\" : \"invalid\"} />\n                            </label>\n                            <input className=\"field\"\n                                   id=\"username\" \n                                   type=\"text\"\n                                   ref={userRef}\n                                   autoComplete=\"off\"\n                                   onChange={(e) => setUsername(e.target.value)}\n                                   value={username}\n                                   required\n                                   aria-invalid={validUsername ? \"false\" : \"true\"}\n                                   aria-describedby=\"unote\"\n                                   onFocus={() => setUsernameFocus(true)}\n                                   onBlur={() => setUsernameFocus(false)}\n                            />\n                            <p id=\"unote\" className={usernameFocus && username && !validUsername ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            4 to 24 characters.<br />\n                            Must begin with a letter.<br />\n                            Letters, numbers, underscores, hyphens allowed.\n                            </p>\n                        \n                        \n                            <label htmlFor=\"email\" className=\"details\">\n                                Email Address\n                                <FontAwesomeIcon icon={faCheck} className={validEmail ? \"valid\" : \"hide\"} />\n                                <FontAwesomeIcon icon={faTimes} className={validEmail || !email ? \"hide\" : \"invalid\"} />\n                            </label>\n                            <input className=\"field\"\n                                   id=\"email\" \n                                   type=\"text\"\n                                   onChange={(e) => setEmail(e.target.value)}\n                                   value={email}\n                                   required\n                                   aria-invalid={validEmail ? \"false\" : \"true\"}\n                                   aria-describedby=\"enote\"\n                                   onFocus={() => setEmailFocus(true)}\n                                   onBlur={() => setEmailFocus(false)}\n                            />\n                            <p id=\"enote\" className={emailFocus && !validEmail ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must be an address which is not currently stord in the database.<br />\n                            Must begin with a letter.<br />\n                            Letters, numbers, and special characters allowed.<br />\n                            Must be a valid email address.\n                            </p>\n                        \n                        \n                        \n                            <label htmlFor=\"password\"className=\"details\">\n                                Password\n                                <FontAwesomeIcon icon={faCheck} className={validPassword ? \"valid\" : \"hide\"} />\n                                <FontAwesomeIcon icon={faTimes} className={validPassword || !password ? \"hide\" : \"invalid\"} />\n                            </label>\n                            <input className=\"field\"\n                                   id=\"password\" \n                                   type=\"password\"\n                                   autoComplete=\"off\"\n                                   onChange={(e) => setPassword(e.target.value)}\n                                   value={password}\n                                   required\n                                   aria-invalid={validPassword ? \"false\" : \"true\"}\n                                   aria-describedby=\"pwdnote\"\n                                   onFocus={() => setPasswordFocus(true)}\n                                   onBlur={() => setPasswordFocus(false)}\n                            />\n                            <p id=\"pwdnote\" className={passwordFocus && !validPassword ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            8 to 24 characters.<br />\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\n                            </p>\n                        \n\n                        \n                            <label htmlFor=\"confirmpassword\" className=\"details\">\n                                Confirm Pasword\n                                <FontAwesomeIcon icon={faCheck} className={validPasswordMatch && passwordMatch ? \"valid\" : \"hide\"} />\n                                <FontAwesomeIcon icon={faTimes} className={validPasswordMatch || !passwordMatch ? \"hide\" : \"invalid\"} />\n                            </label>\n                            <input className=\"field\"\n                                   id=\"confirmpassword\"\n                                   type=\"password\"\n                                   autoComplete=\"off\"\n                                   onChange={(e) => setPasswordMatch(e.target.value)}\n                                   value={passwordMatch}\n                                   required\n                                   aria-invalid={validPasswordMatch ? \"false\" : \"true\"}\n                                   aria-describedby=\"confirmnote\"\n                                   onFocus={() => setPasswordMatchFocus(true)}\n                                   onBlur={() => setPasswordMatchFocus(false)}\n                            />\n                            <p id=\"confirmnote\" className={passwordMatchFocus && !validPasswordMatch ? \"instructions\" : \"offscreen\"}>\n                            <FontAwesomeIcon icon={faInfoCircle} />\n                            Must match the first password input field.\n                            </p>\n                        \n                    <button>\n                        Join Now\n                    </button>\n                </form>\n                <p>\n                        Already registered?<br />\n                        <span>\n                            <Link to=\"/home\">Take Me Home!</Link>\n                        </span>\n                    </p>\n                   \n        </section>\n        )}\n        </>\n    )\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}